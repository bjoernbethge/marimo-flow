# Docker Compose file for MLflow with SQLite

services:
  mlflow-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: mlflow-server:latest
    container_name: mlflow-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # MLflow configuration
      - MLFLOW_BACKEND_STORE_URI=sqlite:///app/db/mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/app/artifacts
      - MLFLOW_WORKERS=1
      - MLFLOW_ENABLE_ARTIFACTS_PROGRESS_BAR=true
      # Python configuration
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      # Timezone
      - TZ=Europe/Berlin
      # UI Performance
      - MLFLOW_GUNICORN_OPTS="--timeout 120 --keep-alive 2 --max-requests 1000"
    volumes:
      # Mount existing directories into /app workdir
      - ./data/mlflow/db:/app/db
      - ./data/mlflow/artifacts:/app/artifacts
      # Mount prompts directory for registry
      - ./data/mlflow/prompts:/app/prompts
    command:
      - /app/.venv/bin/mlflow
      - server
      - --backend-store-uri=sqlite:///app/db/mlflow.db
      - --default-artifact-root=/app/artifacts
      - --host=0.0.0.0
      - --port=8080
      - --workers=1
      - --serve-artifacts
      - --gunicorn-opts=--timeout 120 --keep-alive 2 --max-requests 1000
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "--show-error", "http://localhost:8080/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 45s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M