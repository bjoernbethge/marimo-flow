services:
  marimo-flow:
    image: marimo-flow
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: marimo-flow
    ports:
      - "2718:2718" # Marimo UI
      - "5000:5000" # MLflow backend
    volumes:
      # Mount entire data directory for all data access
      - ../data:/app/data
      # Mount snippets directory for development
      - ../snippets:/app/snippets
      # Mount configs for easy access
      - ../configs:/app/configs
    extra_hosts:
      # Host-Gateway for access to host services
      - "host.docker.internal:host-gateway"
      # Localhost alias for Container-to-Host communication
      - "localhost:host-gateway"
      # Astro Lab hostname for better resolution
      - "marimo-flow:127.0.0.1"
    environment:
      # MLflow server configuration
      - MLFLOW_BACKEND_STORE_URI=sqlite:////app/data/experiments/db/mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/app/data/experiments/artifacts
      - MLFLOW_SERVE_ARTIFACTS=true
      # Server host binding (allows external access)
      - MLFLOW_HOST=0.0.0.0
      - MLFLOW_PORT=5000
      # Optional: Additional MLflow settings
      - MLFLOW_TRACKING_USERNAME=
      - MLFLOW_TRACKING_PASSWORD=
      # Ollama configuration - using host Ollama
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    # The new startup script is automatically used
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  # Optional: MinIO for S3-compatible artifact storage (alternative to local storage)
  # Uncomment if you prefer S3-compatible storage over local file system
  # minio:
  #   image: minio/minio:latest
  #   container_name: marimo-flow-minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - minio_data:/data
  #   environment:
  #     - MINIO_ROOT_USER=minioadmin
  #     - MINIO_ROOT_PASSWORD=minioadmin123
  #   command: server /data --console-address ":9001"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # volumes:
  #   minio_data:

  # Networks (optional - uses default bridge network)
volumes: { }

models:
  gemma3:
    model: ai/gemma3
  gemma3n:
    model: ai/gemma3n